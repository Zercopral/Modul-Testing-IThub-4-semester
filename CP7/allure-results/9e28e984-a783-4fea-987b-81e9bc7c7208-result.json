{"name": "test_admin_add_new_products", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: Reached error page: about:neterror?e=connectionFailure&u=http%3A//localhost/administration/&c=UTF-8&d=Firefox%20can%E2%80%99t%20establish%20a%20connection%20to%20the%20server%20at%20localhost.\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nUnknownError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:832:5\ncheckReadyState@chrome://remote/content/marionette/navigate.sys.mjs:58:24\nonNavigation@chrome://remote/content/marionette/navigate.sys.mjs:330:39\nemit@resource://gre/modules/EventEmitter.sys.mjs:148:20\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25", "trace": "driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"86343d80-9f61-45f1-9c74-45a99a1aeb8a\")>\n\n    def test_admin_add_new_products(driver):\n>       driver.get(\"http:/localhost/administration/\")\n\ndriver     = <selenium.webdriver.remote.webdriver.WebDriver (session=\"86343d80-9f61-45f1-9c74-45a99a1aeb8a\")>\n\nselenium_cp7.py:224: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n        self       = <selenium.webdriver.remote.webdriver.WebDriver (session=\"86343d80-9f61-45f1-9c74-45a99a1aeb8a\")>\n        url        = 'http:/localhost/administration/'\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n        driver_command = 'get'\n        params     = {'url': 'http:/localhost/administration/'}\n        response   = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Reached error page: about:neterror?e=connection....sys.mjs:148:20\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\\\\n\"}}'}\n        self       = <selenium.webdriver.remote.webdriver.WebDriver (session=\"86343d80-9f61-45f1-9c74-45a99a1aeb8a\")>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002098D259A30>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Reached error page: about:neterror?e=connection....sys.mjs:148:20\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Reached error page: about:neterror?e=connectionFailure&u=http%3A//localhost/administration/&c=UTF-8&d=Firefox%20can%E2%80%99t%20establish%20a%20connection%20to%20the%20server%20at%20localhost.\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       UnknownError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:832:5\nE       checkReadyState@chrome://remote/content/marionette/navigate.sys.mjs:58:24\nE       onNavigation@chrome://remote/content/marionette/navigate.sys.mjs:330:39\nE       emit@resource://gre/modules/EventEmitter.sys.mjs:148:20\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\n\ne          = <selenium.webdriver.remote.errorhandler.ErrorCode object at 0x000002098D25BFB0>\nerror_code = 'UNKNOWN_ERROR'\nerror_codes = ['ELEMENT_CLICK_INTERCEPTED', 'ELEMENT_IS_NOT_SELECTABLE', 'ELEMENT_NOT_INTERACTABLE', 'ELEMENT_NOT_VISIBLE', 'IME_ENGINE_ACTIVATION_FAILED', 'IME_NOT_AVAILABLE', ...]\nerror_info = [13, 'unknown error']\nexception_class = <class 'selenium.common.exceptions.WebDriverException'>\njson       = <module 'json' from 'C:\\\\Python312\\\\Lib\\\\json\\\\__init__.py'>\nmessage    = 'Reached error page: about:neterror?e=connectionFailure&u=http%3A//localhost/administration/&c=UTF-8&d=Firefox%20can%E2%80%99t%20establish%20a%20connection%20to%20the%20server%20at%20localhost.'\nresponse   = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Reached error page: about:neterror?e=connection....sys.mjs:148:20\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\\\\n\"}}'}\nscreen     = None\nself       = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002098D259A30>\nst_value   = 'RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\\nWebDriverError@chrome://remote/content/shared/web...mitter.sys.mjs:148:20\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\\n'\nstacktrace = ['RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8', 'WebDriverError@chrome://remote/content/shared/...e://remote/content/marionette/navigate.sys.mjs:330:39', 'emit@resource://gre/modules/EventEmitter.sys.mjs:148:20', ...]\nstatus     = 'unknown error'\nvalue      = {'error': 'unknown error', 'message': 'Reached error page: about:neterror?e=connectionFailure&u=http%3A//localhost/adm...itter.sys.mjs:148:20\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\\n'}\nvalue_json = '{\"value\":{\"error\":\"unknown error\",\"message\":\"Reached error page: about:neterror?e=connectionFailure&u=http%3A//localh...r.sys.mjs:148:20\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteEventsParent.sys.mjs:33:25\\\\n\"}}'\n\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "log", "source": "94513c45-597b-4d4a-9956-727eeec75313-attachment.txt", "type": "text/plain"}], "start": 1717746437679, "stop": 1717746437841, "uuid": "832c1612-07e5-4556-acfc-e90e7e39b26e", "historyId": "248b85a5d50943837bd50c7c78b709ee", "testCaseId": "248b85a5d50943837bd50c7c78b709ee", "fullName": "selenium_cp7#test_admin_add_new_products", "labels": [{"name": "suite", "value": "selenium_cp7"}, {"name": "host", "value": "DESKTOP-RTLEB7L"}, {"name": "thread", "value": "29700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "selenium_cp7"}]}