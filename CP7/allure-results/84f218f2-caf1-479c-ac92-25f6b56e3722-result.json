{"name": "test_show_added_products", "status": "failed", "statusDetails": {"message": "AssertionError: No element in vision ('css selector', '#product-list > div > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > h4:nth-child(1) > a:nth-child(1)')", "trace": "self = <page_objects.SearchPage.SearchPage object at 0x000002098CD59340>\nlocator = ('css selector', '#product-list > div > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > h4:nth-child(1) > a:nth-child(1)')\n\n    def elements(self, locator: tuple):\n        try:\n            self.logger.debug(\n                \"%s: Check if elements %s is present\" % (self.class_name, str(locator))\n            )\n>           return WebDriverWait(self.driver, 5).until(EC.visibility_of_all_elements_located(locator))\n\nlocator    = ('css selector', '#product-list > div > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > h4:nth-child(1) > a:nth-child(1)')\nself       = <page_objects.SearchPage.SearchPage object at 0x000002098CD59340>\n\npage_objects\\BasePage.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"78a1a2d8-16b5-422b-80d3-36c7ef28996d\")>\nmethod = <function visibility_of_all_elements_located.<locals>._predicate at 0x000002098D1BE480>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nend_time   = 30840.578\nmessage    = ''\nmethod     = <function visibility_of_all_elements_located.<locals>._predicate at 0x000002098D1BE480>\nscreen     = None\nself       = <selenium.webdriver.support.wait.WebDriverWait (session=\"78a1a2d8-16b5-422b-80d3-36c7ef28996d\")>\nstacktrace = None\nvalue      = []\n\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"78a1a2d8-16b5-422b-80d3-36c7ef28996d\")>\n\n    def test_show_added_products(driver):\n        products = [ 'Keyboard GSX 1',\n                     'Keyboard GSX PRO 3000',\n                     'Mouse GSM 13',\n                     'Mouse GSM 100' ]\n    \n        for product in products:\n            MainPage(driver).search(product)\n            time.sleep(1)\n>           assert product in SearchPage(driver).get_results()\n\ndriver     = <selenium.webdriver.remote.webdriver.WebDriver (session=\"78a1a2d8-16b5-422b-80d3-36c7ef28996d\")>\nproduct    = 'Keyboard GSX 1'\nproducts   = ['Keyboard GSX 1', 'Keyboard GSX PRO 3000', 'Mouse GSM 13', 'Mouse GSM 100']\n\nselenium_cp7.py:264: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\SearchPage.py:18: in get_results\n    return [elem.text for elem in self.elements(self.RESULTS)]\n        self       = <page_objects.SearchPage.SearchPage object at 0x000002098CD59340>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <page_objects.SearchPage.SearchPage object at 0x000002098CD59340>\nlocator = ('css selector', '#product-list > div > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > h4:nth-child(1) > a:nth-child(1)')\n\n    def elements(self, locator: tuple):\n        try:\n            self.logger.debug(\n                \"%s: Check if elements %s is present\" % (self.class_name, str(locator))\n            )\n            return WebDriverWait(self.driver, 5).until(EC.visibility_of_all_elements_located(locator))\n        except TimeoutException:\n>           raise AssertionError(f\"No element in vision {locator}\")\nE           AssertionError: No element in vision ('css selector', '#product-list > div > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > h4:nth-child(1) > a:nth-child(1)')\n\nlocator    = ('css selector', '#product-list > div > div:nth-child(1) > div:nth-child(2) > div:nth-child(1) > h4:nth-child(1) > a:nth-child(1)')\nself       = <page_objects.SearchPage.SearchPage object at 0x000002098CD59340>\n\npage_objects\\BasePage.py:63: AssertionError"}, "attachments": [{"name": "screenshot", "source": "dd9fd6f7-a135-4ba4-81a4-73d8b9452ea3-attachment.attach"}, {"name": "log", "source": "2b6274b1-9320-434d-a6e7-f3200b1a4348-attachment.txt", "type": "text/plain"}], "start": 1717746444312, "stop": 1717746456368, "uuid": "a3740fe1-309d-490d-87e2-67d88c29fdeb", "historyId": "ec30f9ed195c60cde0a8318998f18467", "testCaseId": "ec30f9ed195c60cde0a8318998f18467", "fullName": "selenium_cp7#test_show_added_products", "labels": [{"name": "suite", "value": "selenium_cp7"}, {"name": "host", "value": "DESKTOP-RTLEB7L"}, {"name": "thread", "value": "29700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "selenium_cp7"}]}