{"name": "Check the screenshot switching", "status": "failed", "statusDetails": {"message": "AssertionError: No element in vision ('css selector', 'img.mb-3')", "trace": "self = <page_objects.ProductPage.ProductPage object at 0x000001D57065AE40>, locator = ('css selector', 'img.mb-3')\n\n    def element(self, locator: tuple):\n        try:\n            self.logger.debug(\n                \"%s: Check if element %s is present\" % (self.class_name, str(locator))\n            )\n>           return WebDriverWait(self.driver, 5).until(EC.visibility_of_element_located(locator))\n\nlocator    = ('css selector', 'img.mb-3')\nself       = <page_objects.ProductPage.ProductPage object at 0x000001D57065AE40>\n\npage_objects\\BasePage.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"20fd7f2b-d993-45da-ae3a-a4c7c41efa6b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001D5713C96C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\nend_time   = 46000.453\nmessage    = ''\nmethod     = <function visibility_of_element_located.<locals>._predicate at 0x000001D5713C96C0>\nscreen     = None\nself       = <selenium.webdriver.support.wait.WebDriverWait (session=\"20fd7f2b-d993-45da-ae3a-a4c7c41efa6b\")>\nstacktrace = ['RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8', 'WebDriverError@chrome://remote/content/shared/...e/content/shared/webdriver/Errors.sys.mjs:511:5', 'dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16', '']\n\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"20fd7f2b-d993-45da-ae3a-a4c7c41efa6b\")>\n\n    @allure.feature(\"Product\")\n    @allure.title(\"Check the screenshot switching\")\n    def test_product_screens(driver):\n        MainPage(driver).click_featured_product(3)\n    \n>       ProductPage(driver).open_screens()\n\ndriver     = <selenium.webdriver.remote.webdriver.WebDriver (session=\"20fd7f2b-d993-45da-ae3a-a4c7c41efa6b\")>\n\nselenium_cp7.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects\\ProductPage.py:21: in open_screens\n    self.element(self.SCREEN_SWITCH_OPEN).click()\n        self       = <page_objects.ProductPage.ProductPage object at 0x000001D57065AE40>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page_objects.ProductPage.ProductPage object at 0x000001D57065AE40>, locator = ('css selector', 'img.mb-3')\n\n    def element(self, locator: tuple):\n        try:\n            self.logger.debug(\n                \"%s: Check if element %s is present\" % (self.class_name, str(locator))\n            )\n            return WebDriverWait(self.driver, 5).until(EC.visibility_of_element_located(locator))\n        except TimeoutException:\n            allure.attach(name=\"screenshot\", body=self.driver.get_screenshot_as_png())\n>           raise AssertionError(f\"No element in vision {locator}\")\nE           AssertionError: No element in vision ('css selector', 'img.mb-3')\n\nlocator    = ('css selector', 'img.mb-3')\nself       = <page_objects.ProductPage.ProductPage object at 0x000001D57065AE40>\n\npage_objects\\BasePage.py:49: AssertionError"}, "attachments": [{"name": "screenshot", "source": "a1d1fc14-9a36-426e-a0b5-29d34a00ac88-attachment.attach"}, {"name": "log", "source": "d0193aed-455a-417a-ace5-55454638d037-attachment.txt", "type": "text/plain"}], "start": 1717761609905, "stop": 1717761616325, "uuid": "714187e2-d954-4dd7-bd86-dc40ea490b94", "historyId": "a5ff1fe51169e77b4a05190e15002495", "testCaseId": "a5ff1fe51169e77b4a05190e15002495", "fullName": "selenium_cp7#test_product_screens", "labels": [{"name": "feature", "value": "Product"}, {"name": "suite", "value": "selenium_cp7"}, {"name": "host", "value": "DESKTOP-RTLEB7L"}, {"name": "thread", "value": "34076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "selenium_cp7"}]}