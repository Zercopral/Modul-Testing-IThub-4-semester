{"name": "Adding single product to cart", "status": "failed", "statusDetails": {"message": "AssertionError: No element in vision ('css selector', '.product-thumb')", "trace": "self = <page_objects.MainPage.MainPage object at 0x000002098D2521B0>, locator = ('css selector', '.product-thumb')\n\n    def elements(self, locator: tuple):\n        try:\n            self.logger.debug(\n                \"%s: Check if elements %s is present\" % (self.class_name, str(locator))\n            )\n>           return WebDriverWait(self.driver, 5).until(EC.visibility_of_all_elements_located(locator))\n\nlocator    = ('css selector', '.product-thumb')\nself       = <page_objects.MainPage.MainPage object at 0x000002098D2521B0>\n\npage_objects\\BasePage.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"430b1a7e-9455-49ff-985a-b175a12f056a\")>, method = <function visibility_of_all_elements_located.<locals>._predicate at 0x000002098CD53D80>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nend_time   = 30754.328\nmessage    = ''\nmethod     = <function visibility_of_all_elements_located.<locals>._predicate at 0x000002098CD53D80>\nscreen     = None\nself       = <selenium.webdriver.support.wait.WebDriverWait (session=\"430b1a7e-9455-49ff-985a-b175a12f056a\")>\nstacktrace = None\nvalue      = []\n\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"430b1a7e-9455-49ff-985a-b175a12f056a\")>\n\n    @allure.feature(\"Shopping Cart\")\n    @allure.story(\"Add product to cart\")\n    @allure.title(\"Adding single product to cart\")\n    def test_add_camera_to_cart(driver):\n>       product_name_to_cart = MainPage(driver).get_featured_product_name(3)\n\ndriver     = <selenium.webdriver.remote.webdriver.WebDriver (session=\"430b1a7e-9455-49ff-985a-b175a12f056a\")>\n\nselenium_cp7.py:108: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\MainPage.py:41: in get_featured_product_name\n    return self.choose_featured_product(index).text\n        index      = 3\n        self       = <page_objects.MainPage.MainPage object at 0x000002098D2521B0>\npage_objects\\MainPage.py:30: in choose_featured_product\n    selected_product = self.elements(self.FEATURED_PRODUCTS)[index]\n        index      = 3\n        self       = <page_objects.MainPage.MainPage object at 0x000002098D2521B0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <page_objects.MainPage.MainPage object at 0x000002098D2521B0>, locator = ('css selector', '.product-thumb')\n\n    def elements(self, locator: tuple):\n        try:\n            self.logger.debug(\n                \"%s: Check if elements %s is present\" % (self.class_name, str(locator))\n            )\n            return WebDriverWait(self.driver, 5).until(EC.visibility_of_all_elements_located(locator))\n        except TimeoutException:\n>           raise AssertionError(f\"No element in vision {locator}\")\nE           AssertionError: No element in vision ('css selector', '.product-thumb')\n\nlocator    = ('css selector', '.product-thumb')\nself       = <page_objects.MainPage.MainPage object at 0x000002098D2521B0>\n\npage_objects\\BasePage.py:63: AssertionError"}, "attachments": [{"name": "log", "source": "a78e37d8-88b4-477d-991d-b55ac688fdce-attachment.txt", "type": "text/plain"}], "start": 1717746364613, "stop": 1717746370091, "uuid": "d831c8f8-bcf1-49c7-8a72-24d3a54fa839", "historyId": "f9a7ff76d8bd758798b07a73cd58f0fc", "testCaseId": "f9a7ff76d8bd758798b07a73cd58f0fc", "fullName": "selenium_cp7#test_add_camera_to_cart", "labels": [{"name": "feature", "value": "Shopping Cart"}, {"name": "story", "value": "Add product to cart"}, {"name": "suite", "value": "selenium_cp7"}, {"name": "host", "value": "DESKTOP-RTLEB7L"}, {"name": "thread", "value": "29700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "selenium_cp7"}]}