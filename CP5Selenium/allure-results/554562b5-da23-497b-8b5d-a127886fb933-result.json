{"name": "test_admin_add_new_products", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: Element <p> is not reachable by keyboard\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:352:5\nwebdriverSendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:668:13\ninteraction.sendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:642:11\nsendKeysToElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:540:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"a9458d86-71ed-433e-8780-90983b95da51\")>\n\n    def test_admin_add_new_products(driver):\n        driver.get(\"http:/localhost/administration/\")\n        AdminPage(driver).login(\"user\", \"bitnami\")\n    \n        products = [\n            ['Keyboard GSX 1', 'The best keyboard for gamers', 'Devices'],\n            ['Keyboard GSX PRO 3000', 'The best of the best keyboard for gamers', 'Devices'],\n            ['Mouse GSM 13', 'Good model for beginners', 'Devices'],\n            ['Mouse GSM 100', 'The best mouse for gamers', 'Devices']\n            ]\n    \n        for product in products:\n            name, description, category = product\n>           AdminPage(driver).add_product(name, description, category)\n\ncategory   = 'Devices'\ndescription = 'The best keyboard for gamers'\ndriver     = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"a9458d86-71ed-433e-8780-90983b95da51\")>\nname       = 'Keyboard GSX 1'\nproduct    = ['Keyboard GSX 1', 'The best keyboard for gamers', 'Devices']\nproducts   = [['Keyboard GSX 1', 'The best keyboard for gamers', 'Devices'], ['Keyboard GSX PRO 3000', 'The best of the best keyboa...'], ['Mouse GSM 13', 'Good model for beginners', 'Devices'], ['Mouse GSM 100', 'The best mouse for gamers', 'Devices']]\n\nselenium_cp5.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_objects\\AdminPage.py:93: in add_product\n    self._input(self.element(self.IFRAME_DESCRIPTION_P), device_description)\n        category_name = 'Devices'\n        description_block = <selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"2e9002d5-1ab9-41a9-950d-11dc289c05c5\")>\n        device_description = 'The best keyboard for gamers'\n        device_name = 'Keyboard GSX 1'\n        self       = <page_objects.AdminPage.AdminPage object at 0x00000248E0BE8620>\npage_objects\\BasePage.py:31: in _input\n    element.send_keys(value)\n        element    = <selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"85e2793b-9b98-4356-842b-832456cc1057\")>\n        self       = <page_objects.AdminPage.AdminPage object at 0x00000248E0BE8620>\n        value      = 'The best keyboard for gamers'\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:231: in send_keys\n    self._execute(\n        self       = <selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"85e2793b-9b98-4356-842b-832456cc1057\")>\n        value      = ('The best keyboard for gamers',)\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n        command    = 'sendKeysToElement'\n        params     = {'id': '85e2793b-9b98-4356-842b-832456cc1057', 'text': 'The best keyboard for gamers', 'value': ['T', 'h', 'e', ' ', 'b', 'e', ...]}\n        self       = <selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"85e2793b-9b98-4356-842b-832456cc1057\")>\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n        driver_command = 'sendKeysToElement'\n        params     = {'text': 'The best keyboard for gamers', 'value': ['T', 'h', 'e', ' ', 'b', 'e', ...]}\n        response   = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"Element <p> is not reachable by keyb...ys.mjs:540:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\\\\n\"}}'}\n        self       = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"a9458d86-71ed-433e-8780-90983b95da51\")>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000248DE60C620>, response = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"Element <p> is not reachable by keyb...ys.mjs:540:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: Element <p> is not reachable by keyboard\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nE       ElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:352:5\nE       webdriverSendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:668:13\nE       interaction.sendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:642:11\nE       sendKeysToElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:540:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\n\ne          = <selenium.webdriver.remote.errorhandler.ErrorCode object at 0x00000248E0C5EBD0>\nerror_code = 'ELEMENT_NOT_INTERACTABLE'\nerror_codes = ['ELEMENT_CLICK_INTERCEPTED', 'ELEMENT_IS_NOT_SELECTABLE', 'ELEMENT_NOT_INTERACTABLE', 'ELEMENT_NOT_VISIBLE', 'IME_ENGINE_ACTIVATION_FAILED', 'IME_NOT_AVAILABLE', ...]\nerror_info = [60, 'element not interactable']\nexception_class = <class 'selenium.common.exceptions.ElementNotInteractableException'>\njson       = <module 'json' from 'C:\\\\Python312\\\\Lib\\\\json\\\\__init__.py'>\nmessage    = 'Element <p> is not reachable by keyboard'\nresponse   = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"Element <p> is not reachable by keyb...ys.mjs:540:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\\\\n\"}}'}\nscreen     = None\nself       = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000248DE60C620>\nst_value   = 'RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\\nWebDriverError@chrome://remote/content/shared/web...hild.sys.mjs:540:29\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\\n'\nstacktrace = ['RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8', 'WebDriverError@chrome://remote/content/shared/...mjs:642:11', 'sendKeysToElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:540:29', ...]\nstatus     = 'element not interactable'\nvalue      = {'error': 'element not interactable', 'message': 'Element <p> is not reachable by keyboard', 'stacktrace': 'RemoteErro...ild.sys.mjs:540:29\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\\n'}\nvalue_json = '{\"value\":{\"error\":\"element not interactable\",\"message\":\"Element <p> is not reachable by keyboard\",\"stacktrace\":\"Remot...sys.mjs:540:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\\\\n\"}}'\n\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException"}, "steps": [{"name": "_input", "status": "passed", "steps": [{"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"df89d42b-8a06-422d-a187-733ecd82624e\")>"}], "start": 1713258363762, "stop": 1713258364192}], "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"df89d42b-8a06-422d-a187-733ecd82624e\")>"}, {"name": "value", "value": "'user'"}], "start": 1713258363762, "stop": 1713258364214}, {"name": "_input", "status": "passed", "steps": [{"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"8dc15293-34ec-47c2-9cf4-95ad6b4e4f8a\")>"}], "start": 1713258364231, "stop": 1713258364621}], "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"8dc15293-34ec-47c2-9cf4-95ad6b4e4f8a\")>"}, {"name": "value", "value": "'bitnami'"}], "start": 1713258364231, "stop": 1713258364635}, {"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"3fc544c4-1e33-44fe-ab5a-c68855fe438c\")>"}], "start": 1713258364652, "stop": 1713258365055}, {"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"1be59658-fa66-4837-b7f8-09b27af58f30\")>"}], "start": 1713258365599, "stop": 1713258365987}, {"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"562fc231-d978-481d-8326-caf9edf52193\")>"}], "start": 1713258366515, "stop": 1713258366915}, {"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"3e835e68-6cd1-4e89-b68e-583ab789a68d\")>"}], "start": 1713258367432, "stop": 1713258367834}, {"name": "_input", "status": "passed", "steps": [{"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"03a8ad4e-dd5d-4ea3-a88b-930e4e80da30\")>"}], "start": 1713258368353, "stop": 1713258368770}], "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"03a8ad4e-dd5d-4ea3-a88b-930e4e80da30\")>"}, {"name": "value", "value": "'Keyboard GSX 1'"}], "start": 1713258368353, "stop": 1713258368784}, {"name": "_input", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: Element <p> is not reachable by keyboard\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:192:5\nElementNotInteractableError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:352:5\nwebdriverSendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:668:13\ninteraction.sendKeysToElement@chrome://remote/content/marionette/interaction.sys.mjs:642:11\nsendKeysToElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:540:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:150:31\n\n", "trace": "  File \"C:\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\Programming\\IThub\\TestWeb\\CP5Selenium\\page_objects\\BasePage.py\", line 31, in _input\n    element.send_keys(value)\n  File \"C:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 231, in send_keys\n    self._execute(\n  File \"C:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "click", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"85e2793b-9b98-4356-842b-832456cc1057\")>"}], "start": 1713258368810, "stop": 1713258369205}], "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"a9458d86-71ed-433e-8780-90983b95da51\", element=\"85e2793b-9b98-4356-842b-832456cc1057\")>"}, {"name": "value", "value": "'The best keyboard for gamers'"}], "start": 1713258368810, "stop": 1713258369277}], "attachments": [{"name": "log", "source": "a6885856-10a9-4578-9e83-54f492f21176-attachment.txt", "type": "text/plain"}], "start": 1713258363422, "stop": 1713258369280, "uuid": "e1904228-6f60-4df6-a0e5-6213a4417e7a", "historyId": "7f8927a2a3f26d83a7bc65852657451c", "testCaseId": "7f8927a2a3f26d83a7bc65852657451c", "fullName": "selenium_cp5#test_admin_add_new_products", "labels": [{"name": "suite", "value": "selenium_cp5"}, {"name": "host", "value": "DESKTOP-RTLEB7L"}, {"name": "thread", "value": "23376-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "selenium_cp5"}]}